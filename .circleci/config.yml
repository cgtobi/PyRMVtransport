version: 2.1


# jobs:
#   build:
#     docker:
#       - image: circleci/python:3.7.2
#       - image: circleci/buildpack-deps:stretch
#
#     working_directory: ~/repo
#
#     steps:
#       - checkout
#
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "requirements_all.txt" }}-{{ checksum "requirements_test.txt" }}
#
#       - run:
#           command: |
#             sudo pip install pipenv
#             pipenv --python 3.7
#             pipenv install --dev
#
#       - save_cache:
#           paths:
#             - ./venv
#           key: v1-dependencies-{{ checksum "requirements_all.txt" }}-{{ checksum "requirements_test.txt" }}
#
#       - run:
#           command: pipenv run tox




common: &common
  working_directory: ~/repo
  steps:
    - checkout
    - restore_cache:
        keys:
          - v2-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: install dependencies
        command: |
          sudo pip install pipenv
          pipenv --python 3.7
          pipenv install --dev
    - save_cache:
        key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
        paths:
          - ".venv"
          - "/usr/local/bin"
          - "/usr/local/lib/python3.7/site-packages"
    - run:
        name: run tox
        command: pipenv run tox
    - run:
        name: upload coverage report
        command: |
           if [[ "$UPLOAD_COVERAGE" != 0 ]]; then
               PATH=$HOME/.local/bin:$PATH
               pip install --user codecov
               coverage xml
               ~/.local/bin/codecov --required -X search gcov pycov -f coverage.xml --flags $CIRCLE_JOB
           fi
    - save_cache:
        paths:
          - .tox
          - ~/.cache/pip
          - ~/.local
          - ./eggs
        key: v2-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

#py36, py37, py38, cov, lint, typing
jobs:
  lint:
    requires:
      - build
    <<: *common
    docker:
      - image: circleci/python:3.7.2
        environment:
          - TOXENV=lint
          - UPLOAD_COVERAGE=0
  py36:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV=py36
  py37:
    requires:
      - build
    <<: *common
    docker:
      - image: circleci/python:3.7.2
        environment:
          TOXENV=py37
  cov:
    requires:
      - build
    <<: *common
    docker:
      - image: circleci/python:3.7.2
        environment:
          TOXENV=cov
  typing:
    requires:
      - build
    <<: *common
    docker:
      - image: circleci/python:3.7.2
        environment:
          TOXENV=typing
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7.2

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
      - image: circleci/buildpack-deps:stretch

    working_directory: ~/repo

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"

workflows:
  version: 2
  test:
    jobs:
      - build
      - lint
      - cov
      - py36
      - py37
      - typing

# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
#       - image: circleci/python:3.7.2
#
#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/postgres:9.4
#       - image: circleci/buildpack-deps:stretch
#
#     working_directory: ~/repo
#
#     steps:
#       - checkout
#       - run: sudo chown -R circleci:circleci /usr/local/bin
#       - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
#       - restore_cache:  # ensure this step occurs *before* installing dependencies
#           key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
#       - run:
#           command: |
#             sudo pip install pipenv
#             pipenv install
#       - save_cache:
#           key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
#           paths:
#             - ".venv"
#             - "/usr/local/bin"
#             - "/usr/local/lib/python3.7/site-packages"
#       - run:
#         command: pipenv run tox
#
#       # - run:
#       #     name: run tests
#       #     command: |
#       #       . venv/bin/activate
#       #       if [ -z "$CODE_COVERAGE" ]; then CC_SWITCH=""; else CC_SWITCH="--cov --cov-report html:htmlcov"; fi
#       #       pytest --timeout=9 --duration=10 --junitxml=test-reports/homeassistant/results.xml -qq -o junit_family=xunit2 -o junit_suite_name=homeassistant -o console_output_style=count -p no:sugar $CC_SWITCH
#       #       script/check_dirty
#       #     when: always
#       #
#       # - store_test_results:
#       #     path: test-reports
#       #
#       # - store_artifacts:
#       #     path: htmlcov
#       #     destination: cov-reports
#       #
#       # - store_artifacts:
#       #     path: test-reports
#       #     destination: test-reports
